name: docker-build-template

on:
  workflow_call:
    inputs:
      IMAGE_CONTEXT:
        required: true
        type: string
      BUILD_CONTEXT:
        required: false
        type: string
        default: ""
      IMAGE_FILE:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string

    secrets:
      REGISTRY:
        required: true
      NAMESPACE:
        required: true
      REGISTRY_USER:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ secrets.REGISTRY }}/${{ secrets.NAMESPACE }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}/${{ secrets.NAMESPACE }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set image repository
        id: set_image_repository
        run: |
          # Set image repository and change all uppercase to lowercase
          DOCKER_REPOSITORY=$(echo ${{ secrets.REGISTRY }}/${{ secrets.NAMESPACE }}/${{ env.IMAGE_NAME }} | tr '[A-Z]' '[a-z]')
          echo "::set-output name=docker-repository::$DOCKER_REPOSITORY"

      - name: Pull image
        env:
          DOCKER_REPOSITORY: ${{ steps.set_image_repository.outputs.docker-repository }}
        run: docker pull $DOCKER_REPOSITORY:latest || true

      - name: Build image
        env:
          DOCKER_REPOSITORY: ${{ steps.set_image_repository.outputs.docker-repository }}
        working-directory: ${{ inputs.IMAGE_CONTEXT }}
        run: |
          VERSION=$(echo "${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" | awk -F=v '{print $NF}')
          echo DOCKER_REPOSITORY=${{ env.DOCKER_REPOSITORY }}
          echo VERSION=$VERSION          
          tar -czh . | docker build --load --tag ${{ env.DOCKER_REPOSITORY }}:latest --cache-from=${{ env.DOCKER_REPOSITORY }}:latest --build-arg VERSION=$VERSION -
          docker tag ${{ env.DOCKER_REPOSITORY }}:latest ${{ env.DOCKER_REPOSITORY }}:$VERSION

      - name: Push image
        env:
          DOCKER_REPOSITORY: ${{ steps.set_image_repository.outputs.docker-repository }}
        run: |
          docker push --all-tags ${{ env.DOCKER_REPOSITORY }}
