kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.env }}-drr-landing
  labels:
    app: {{ .Values.app }}
    role: {{ .Values.role }}
    env: {{ .Values.env }}
    app.kubernetes.io/part-of: {{ .Values.env }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
      name: {{ .Values.env }}-drr-landing
  template:
    metadata:      
      labels:
        app: {{ .Values.app }}
        role: {{ .Values.role }}
        name: {{ .Values.env }}-drr-landing
    spec:
      containers:        
        - resources:
            limits:
              cpu: '{{ .Values.cpuLimit }}'
              memory: '{{ .Values.memoryLimit }}'
            requests:
              cpu: '{{ .Values.cpuRequest }}'
              memory: '{{ .Values.memoryRequest }}'
          readinessProbe:
            httpGet:
              path: /
              port: 2016
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: {{ .Values.env }}-drr-landing
          livenessProbe:
            httpGet:
              path: /
              port: 2016
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 2015
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: {{ .Values.imageRepository }}:{{ .Values.env }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler                    
