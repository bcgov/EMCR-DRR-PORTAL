/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * DRR API
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http'
import type {
  HttpContext,
  HttpHeaders,
  HttpParams
} from '@angular/common/http'
import {
  Injectable
} from '@angular/core'
import {
  Observable
} from 'rxjs'
import type {
  ApplicationResult,
  DeclarationResult,
  DraftApplication,
  DraftEoiApplication,
  DraftFpApplication,
  EoiApplication,
  FpApplication,
  Submission
} from '../../model'


type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class DrifapplicationService {
  constructor(
    private http: HttpClient,
  ) {} dRIFApplicationGetAll<TData = Submission[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `/api/drifapplication`,options
    );
  }
 dRIFApplicationGet<TData = DraftApplication>(
    id: string, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `/api/drifapplication/${id}`,options
    );
  }
 dRIFApplicationGetDeclarations<TData = DeclarationResult>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `/api/drifapplication/declarations`,options
    );
  }
 dRIFApplicationCreateEOIApplication<TData = ApplicationResult>(
    draftEoiApplication: DraftEoiApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/eoi`,
      draftEoiApplication,options
    );
  }
 dRIFApplicationUpdateApplication<TData = ApplicationResult>(
    id: string,
    draftEoiApplication: DraftEoiApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/eoi/${id}`,
      draftEoiApplication,options
    );
  }
 dRIFApplicationSubmitApplication<TData = ApplicationResult>(
    eoiApplication: EoiApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/eoi/submit`,
      eoiApplication,options
    );
  }
 dRIFApplicationSubmitApplication2<TData = ApplicationResult>(
    id: string,
    eoiApplication: EoiApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/eoi/${id}/submit`,
      eoiApplication,options
    );
  }
 dRIFApplicationCreateFPFromEOI<TData = ApplicationResult>(
    eoiId: string, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/fp/eoi/${eoiId}`,undefined,options
    );
  }
 dRIFApplicationUpdateFPApplication<TData = ApplicationResult>(
    id: string,
    draftFpApplication: DraftFpApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/fp/${id}`,
      draftFpApplication,options
    );
  }
 dRIFApplicationSubmitFPApplication<TData = ApplicationResult>(
    id: string,
    fpApplication: FpApplication, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/api/drifapplication/fp/${id}/submit`,
      fpApplication,options
    );
  }
};

export type DRIFApplicationGetAllClientResult = NonNullable<Submission[]>
export type DRIFApplicationGetClientResult = NonNullable<DraftApplication>
export type DRIFApplicationGetDeclarationsClientResult = NonNullable<DeclarationResult>
export type DRIFApplicationCreateEOIApplicationClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationUpdateApplicationClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationSubmitApplicationClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationSubmitApplication2ClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationCreateFPFromEOIClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationUpdateFPApplicationClientResult = NonNullable<ApplicationResult>
export type DRIFApplicationSubmitFPApplicationClientResult = NonNullable<ApplicationResult>
